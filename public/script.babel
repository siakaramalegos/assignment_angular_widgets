// Restaurant Table
var Restaurants = React.createClass({
  render: function(){
    var restaurants = this.props.restaurants,
        deleteRestaurant = this.props.deleteRestaurant,
        restaurantCards = restaurants.map(function(restaurant){
          return (
            <div className="well restaurant">
              <img src={restaurant.imageUrl} className="img-thumbnail" />
              <h4>{restaurant.name}</h4>
              <p className="text-muted">
                <span className="pull-right">
                  <button
                    className="btn btn-danger btn-xs"
                    onClick={deleteRestaurant.bind(null, restaurant.id)}>
                    Delete
                  </button>
                </span>
                <em>{restaurant.foodType}</em>
              </p>

            </div>
          )
        });

    return (
      <div id="restaurants">
        {restaurantCards}
      </div>
    )
  }
});




// Restaurant Form
var RestaurantForm = React.createClass({
  getInitialState: function(){
    return {
      name: '',
      foodType: '',
      imageUrl: ''
    };
  },

  handleNameChange: function(event){
    this.setState({name: event.target.value});
  },

  handleFoodTypeChange: function(event){
    this.setState({foodType: event.target.value});
  },

  handleImageUrlChange: function(event){
    this.setState({imageUrl: event.target.value});
  },

  handleSubmit: function(event){
    event.preventDefault();

    var name = this.state.name.trim(),
        foodType = this.state.foodType.trim(),
        imageUrl = this.state.imageUrl.trim();

    if (!name || !foodType || !imageUrl){
      return
    }

    this.props.restaurantSubmit({
      name: name,
      foodType: foodType,
      imageUrl: imageUrl
    })

    this.replaceState(this.getInitialState());
  },

  render: function(){
    return (
      <div className="well">
        <form className="form-inline" onSubmit={this.handleSubmit}>
          <div className="form-group">
            <input
              type="text"
              placeholder="Restaurant name"
              className="form-control"
              value={this.state.name}
              onChange={this.handleNameChange} />
          </div>
          <div className="form-group">
            <input
              type="text"
              placeholder="Type of cuisine"
              className="form-control"
              value={this.state.foodType}
              onChange={this.handleFoodTypeChange} />
          </div>
          <div className="form-group">
            <input
              type="text"
              placeholder="Image URL"
              className="form-control"
              value={this.state.imageUrl}
              onChange={this.handleImageUrlChange} />
          </div>
          <input type="submit" value="Add restaurant!" className="btn btn-default" />
        </form>
      </div>
    );
  }
})




// Search form
var SearchForm = React.createClass({
  handleFilterChange: function(event){
    var newFilterText = ReactDOM.findDOMNode(this.refs.search).value;
    this.props.filter(newFilterText);
  },

  render: function(){
    return (
      <div className="text-right">
        <form>
          <div className="form-group">
            <input
              type="text"
              placeholder="Search text"
              className="form-control"
              ref="search"
              value={this.props.filterText}
              onChange={this.handleFilterChange} />
          </div>
        </form>
      </div>
    );
  }
});




// Sort Buttons
var SortButtons = React.createClass({
  render: function(){
    var sortField = this.props.sortField,
        sortDirection = this.props.sortDirection,
        sortedIcon = (<i className={"fa fa-sort-" + sortDirection} aria-hidden="true"></i>),
        notSortedIcon = (<i className="fa fa-sort" aria-hidden="true"></i>),
        nameSortIcon = notSortedIcon,
        foodTypeSortIcon = notSortedIcon;

    if (sortField === 'name') {
      nameSortIcon = sortedIcon;
    } else if (sortField === 'foodType') {
      foodTypeSortIcon = sortedIcon;
    }

    return (
      <div id="sort-buttons">
      <div className="col-sm-4">
        <button className="btn btn-default btn-block">
          {nameSortIcon}
          &nbsp;
          Sort by Name
        </button>
      </div>
      <div className="col-sm-4">
        <button className="btn btn-default btn-block">
          {foodTypeSortIcon}
          &nbsp;
          Sort by Cuisine
        </button>
      </div>
      </div>
    );
  }
});




// Main component controlling app
var Main = React.createClass({
  getInitialState: function(){
    return {
      restaurants: [],
      restaurantsUrl: '/api/restaurants',
      pollInterval: 2000,
      filterText: '',
      sortField: null,
      sortDirection: null
    }
  },

  loadRestaurantsFromServer: function(){
    $.ajax({
      url: this.state.restaurantsUrl,
      dataType: 'json',
      cache: false,
      success: function(data){
        this.setState({restaurants: data});
      }.bind(this),
      error: function(xhr, status, err){
        console.error(this.state.restaurantsUrl, status, err.toString());
      }.bind(this)
    });
  },

  // Submit to the server and refresh the list
  restaurantSubmit: function(restaurant){
    // Optimistically set restaurants
    var restaurants = this.state.restaurants;
    restaurant.id = Date.now();
    var newRestaurants = restaurants.concat([restaurant]);
    this.setState({restaurants: newRestaurants});

    $.ajax({
      url: this.state.restaurantsUrl,
      dataType: 'json',
      type: 'POST',
      data: restaurant,
      success: function(data){
        this.setState({restaurants: data});
      }.bind(this),
      error: function(xhr, status, err){
        this.setState({restaurants: restaurants})
        console.error(this.state.restaurantsUrl, status, err.toString());
      }.bind(this)
    })
  },

  componentDidMount: function(){
    this.loadRestaurantsFromServer();
    // setInterval(this.loadRestaurantsFromServer, this.state.pollInterval);
  },

  deleteRestaurant: function(restaurantId, event){
    $.ajax({
      url: this.state.restaurantsUrl,
      dataType: 'json',
      type: 'DELETE',
      data: {id: restaurantId},
      success: function(data){
        this.setState({restaurants: data});
      }.bind(this),
      error: function(xhr, status, err){
        console.error(this.state.restaurantsUrl, status, err.toString());
      }.bind(this)
    })
  },

  filter: function(newText){
    this.setState({filterText: newText});
  },

  filteredRestaurants: function(){
    var restaurants = this.state.restaurants,
        filterTextLower = this.state.filterText.toLowerCase();

    if (filterTextLower !== ''){
      restaurants = restaurants.filter(function(restaurant){
        var restaurantNameLower = restaurant.name.toLowerCase();
        return (restaurantNameLower.indexOf(filterTextLower) !== -1);
      });
    }

    return restaurants;
  },

  render: function(){
    return (
      <div id="main">
        <h1>Restaurants I've Visited</h1>
        <hr />
        <RestaurantForm
          restaurantSubmit={this.restaurantSubmit} />
        <div className="row">
          <SortButtons
            sortField={this.state.sortField}
            sortDirection={this.state.sortDirection} />
          <div className="col-sm-4">
            <SearchForm
              filterText={this.state.filterText}
              filter={this.filter} />
          </div>
        </div>
        <br />
        <Restaurants
          restaurants={this.filteredRestaurants()}
          deleteRestaurant={this.deleteRestaurant} />
      </div>
    );
  }
});

ReactDOM.render(
  <Main />,
  document.getElementById('container')
);
